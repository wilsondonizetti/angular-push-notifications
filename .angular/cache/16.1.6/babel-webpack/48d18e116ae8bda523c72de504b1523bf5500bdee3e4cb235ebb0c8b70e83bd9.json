{"ast":null,"code":"import _asyncToGenerator from \"E:/Estudo/Tecnologias/Angular/my-pwa/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpHeaders } from \"@angular/common/http\";\nimport { EMPTY, firstValueFrom } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PDVService {\n  constructor(http) {\n    this.http = http;\n  }\n  addPushSubscriber(sub) {\n    console.log('sub service', sub);\n    return this.http.post('https://mocktarget.apigee.net/echo', [{\n      \"notification\": {\n        \"title\": \"Crédito Pessoal\",\n        \"body\": \"teste\",\n        \"vibrate\": [100, 50, 100],\n        \"data\": {\n          \"dateOfArrival\": \"2023-08-02\",\n          \"primaryKey\": 1\n        }\n      }\n    }]).subscribe(result => {\n      const hds = new HttpHeaders().set('Authorization', `basic ${sub.getKey('auth')}`);\n      this.http.post(sub.endpoint, result, {\n        headers: hds\n      }).subscribe(result => {\n        console.log('result', result);\n      });\n    });\n  }\n  dados() {\n    return _asyncToGenerator(function* () {\n      return yield firstValueFrom(EMPTY, {\n        defaultValue: [{\n          \"notification\": {\n            \"title\": \"Crédito Pessoal\",\n            \"body\": \"Cliente elegível no caixa U000012!!\",\n            \"vibrate\": [100, 50, 100],\n            \"data\": {\n              \"dateOfArrival\": \"2023-08-02\",\n              \"primaryKey\": 1\n            },\n            \"actions\": [{\n              \"action\": \"explore\",\n              \"title\": \"Ofertar ao cliente\"\n            }]\n          }\n        }]\n      });\n    })();\n  }\n}\nPDVService.ɵfac = function PDVService_Factory(t) {\n  return new (t || PDVService)(i0.ɵɵinject(i1.HttpClient));\n};\nPDVService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PDVService,\n  factory: PDVService.ɵfac\n});","map":{"version":3,"names":["HttpHeaders","EMPTY","firstValueFrom","PDVService","constructor","http","addPushSubscriber","sub","console","log","post","subscribe","result","hds","set","getKey","endpoint","headers","dados","_asyncToGenerator","defaultValue","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["E:\\Estudo\\Tecnologias\\Angular\\my-pwa\\src\\app\\services\\pdv.service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport { EMPTY, Observable, firstValueFrom } from \"rxjs\";\r\n\r\n\r\n\r\n@Injectable()\r\nexport class PDVService {\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    addPushSubscriber(sub:PushSubscription) {\r\n        console.log('sub service', sub);\r\n        return this.http.post<Array<Notification>>('https://mocktarget.apigee.net/echo', [{\r\n          \"notification\": {\r\n            \"title\": \"Crédito Pessoal\",\r\n            \"body\": \"teste\",\r\n            \"vibrate\": [100, 50, 100],\r\n            \"data\": {\r\n              \"dateOfArrival\": \"2023-08-02\",\r\n              \"primaryKey\": 1\r\n            }\r\n          }\r\n        }]).subscribe(result => {\r\n          const hds = new HttpHeaders().set('Authorization', `basic ${sub.getKey('auth')}`)\r\n          this.http.post(sub.endpoint, result, { headers: hds}).subscribe(result=>{\r\n            console.log('result', result);\r\n          });\r\n        });\r\n    }\r\n\r\n    async dados() {\r\n      return await firstValueFrom(EMPTY, {\r\n        defaultValue: [{\r\n          \"notification\": {\r\n              \"title\": \"Crédito Pessoal\",\r\n              \"body\": \"Cliente elegível no caixa U000012!!\",\r\n              \"vibrate\": [100, 50, 100],\r\n              \"data\": {\r\n                  \"dateOfArrival\": \"2023-08-02\",\r\n                  \"primaryKey\": 1\r\n              },\r\n              \"actions\": [{\r\n                  \"action\": \"explore\",\r\n                  \"title\": \"Ofertar ao cliente\"\r\n              }]\r\n            }\r\n          }]});\r\n    }\r\n}\r\n"],"mappings":";AACA,SAAoBA,WAAW,QAAO,sBAAsB;AAC5D,SAASC,KAAK,EAAcC,cAAc,QAAQ,MAAM;;;AAKxD,OAAM,MAAOC,UAAU;EAEnBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAExB;EAEAC,iBAAiBA,CAACC,GAAoB;IAClCC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,GAAG,CAAC;IAC/B,OAAO,IAAI,CAACF,IAAI,CAACK,IAAI,CAAsB,oCAAoC,EAAE,CAAC;MAChF,cAAc,EAAE;QACd,OAAO,EAAE,iBAAiB;QAC1B,MAAM,EAAE,OAAO;QACf,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;QACzB,MAAM,EAAE;UACN,eAAe,EAAE,YAAY;UAC7B,YAAY,EAAE;;;KAGnB,CAAC,CAAC,CAACC,SAAS,CAACC,MAAM,IAAG;MACrB,MAAMC,GAAG,GAAG,IAAIb,WAAW,EAAE,CAACc,GAAG,CAAC,eAAe,EAAE,SAASP,GAAG,CAACQ,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;MACjF,IAAI,CAACV,IAAI,CAACK,IAAI,CAACH,GAAG,CAACS,QAAQ,EAAEJ,MAAM,EAAE;QAAEK,OAAO,EAAEJ;MAAG,CAAC,CAAC,CAACF,SAAS,CAACC,MAAM,IAAE;QACtEJ,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEG,MAAM,CAAC;MAC/B,CAAC,CAAC;IACJ,CAAC,CAAC;EACN;EAEMM,KAAKA,CAAA;IAAA,OAAAC,iBAAA;MACT,aAAajB,cAAc,CAACD,KAAK,EAAE;QACjCmB,YAAY,EAAE,CAAC;UACb,cAAc,EAAE;YACZ,OAAO,EAAE,iBAAiB;YAC1B,MAAM,EAAE,qCAAqC;YAC7C,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;YACzB,MAAM,EAAE;cACJ,eAAe,EAAE,YAAY;cAC7B,YAAY,EAAE;aACjB;YACD,SAAS,EAAE,CAAC;cACR,QAAQ,EAAE,SAAS;cACnB,OAAO,EAAE;aACZ;;SAEJ;OAAE,CAAC;IAAC;EACX;;AA3CSjB,UAAU,C;mBAAVA,UAAU,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAVrB,UAAU,C;SAAVA,UAAU;EAAAsB,OAAA,EAAVtB,UAAU,CAAAuB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}