{"ast":null,"code":"import { isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule, SwRegistrationOptions } from '@angular/service-worker';\nimport { PDVService } from './services/pdv.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/service-worker\";\nimport * as i2 from \"./services/pdv.service\";\nexport class AppModule {\n  constructor(swPush, update, pdvService, svcWorker) {\n    this.swPush = swPush;\n    this.update = update;\n    this.pdvService = pdvService;\n    this.svcWorker = svcWorker;\n    this.VAPID_PUBLIC_KEY = \"BLjKEyVxw9XVPfhrX1HwuTOeHTcnOf5BacH6w7k7_LTTVnqX6A9S6OOpE27pZTNbcB_mrIRP73WvG_P-8aPRx0A\";\n    update.versionUpdates.subscribe(update => {\n      console.log(\"Nova versão disponível\");\n    });\n    this.SubscribeToPush();\n    swPush.messages.subscribe(msg => {\n      console.log('msg', JSON.stringify(msg));\n    });\n    this.subscribeToNotificationClicks();\n  }\n  subscribeToNotificationClicks() {\n    // #docregion subscribe-to-notification-clicks\n    this.swPush.notificationClicks.subscribe(({\n      action,\n      notification\n    }) => {\n      // TODO: Do something in response to notification click.\n      console.log('action', action);\n      console.log('notification', notification);\n    });\n    // #enddocregion subscribe-to-notification-clicks\n  }\n\n  SubscribeToPush() {\n    this.swPush.requestSubscription({\n      serverPublicKey: this.VAPID_PUBLIC_KEY\n    }).then(sub => {\n      console.log('SubscribeToPush', JSON.stringify(sub));\n      this.pdvService.addPushSubscriber(sub).subscribe(result => {\n        result.forEach(item => {\n          this.svcWorker.showNotification(item.title, {\n            body: item.body,\n            icon: item.icon,\n            vibrate: [50, 100, 50]\n          });\n        });\n      });\n      ;\n    }).catch(err => {\n      console.error(\"Ocorreu um erro:\" + err);\n    });\n  }\n}\nAppModule.ɵfac = function AppModule_Factory(t) {\n  return new (t || AppModule)(i0.ɵɵinject(i1.SwPush), i0.ɵɵinject(i1.SwUpdate), i0.ɵɵinject(i2.PDVService), i0.ɵɵinject(ServiceWorkerRegistration));\n};\nAppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppModule,\n  bootstrap: [AppComponent]\n});\nAppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [PDVService, {\n    provide: SwRegistrationOptions,\n    useFactory: () => ({\n      enabled: location.search.includes('sw=true')\n    })\n  }],\n  imports: [BrowserModule, HttpClientModule, ServiceWorkerModule.register('ngsw-worker.js', {\n    enabled: !isDevMode(),\n    // Register the ServiceWorker as soon as the application is stable\n    // or after 30 seconds (whichever comes first).\n    registrationStrategy: 'registerWhenStable:30000'\n  })]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent],\n    imports: [BrowserModule, HttpClientModule, i1.ServiceWorkerModule]\n  });\n})();","map":{"version":3,"names":["isDevMode","BrowserModule","AppComponent","ServiceWorkerModule","SwRegistrationOptions","PDVService","HttpClientModule","AppModule","constructor","swPush","update","pdvService","svcWorker","VAPID_PUBLIC_KEY","versionUpdates","subscribe","console","log","SubscribeToPush","messages","msg","JSON","stringify","subscribeToNotificationClicks","notificationClicks","action","notification","requestSubscription","serverPublicKey","then","sub","addPushSubscriber","result","forEach","item","showNotification","title","body","icon","vibrate","catch","err","error","i0","ɵɵinject","i1","SwPush","SwUpdate","i2","ServiceWorkerRegistration","bootstrap","provide","useFactory","enabled","location","search","includes","imports","register","registrationStrategy","declarations"],"sources":["E:\\Estudo\\Tecnologias\\Angular\\my-pwa\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule, isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule, SwPush, SwRegistrationOptions, SwUpdate } from '@angular/service-worker';\nimport { PDVService } from './services/pdv.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: !isDevMode(),\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })\n  ],\n  providers: [\n    PDVService,\n    {\n      provide: SwRegistrationOptions,\n      useFactory: () => ({enabled: location.search.includes('sw=true')}),\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  readonly VAPID_PUBLIC_KEY = \"BLjKEyVxw9XVPfhrX1HwuTOeHTcnOf5BacH6w7k7_LTTVnqX6A9S6OOpE27pZTNbcB_mrIRP73WvG_P-8aPRx0A\";\n\n  constructor(\n    private swPush:SwPush,\n    private update:SwUpdate,\n    private pdvService: PDVService,\n    private svcWorker: ServiceWorkerRegistration){\n    update.versionUpdates.subscribe(update =>{\n        console.log(\"Nova versão disponível\");\n      });\n\n    this.SubscribeToPush();\n    swPush.messages.subscribe(msg =>{\n        console.log('msg', JSON.stringify(msg));\n    });\n    this.subscribeToNotificationClicks();\n  }\n  private subscribeToNotificationClicks() {\n    // #docregion subscribe-to-notification-clicks\n    this.swPush.notificationClicks.subscribe(\n        ({action, notification}) => {\n            // TODO: Do something in response to notification click.\n            console.log('action', action);\n            console.log('notification', notification);\n        });\n    // #enddocregion subscribe-to-notification-clicks\n  }\n  SubscribeToPush(){\n    this.swPush.requestSubscription({\n      serverPublicKey:this.VAPID_PUBLIC_KEY\n    })\n    .then(sub => {\n      console.log('SubscribeToPush', JSON.stringify(sub));\n      this.pdvService.addPushSubscriber(sub).subscribe(result => {\n          result.forEach(item=>{\n            this.svcWorker.showNotification(item.title, {\n              body: item.body,\n              icon: item.icon,\n              vibrate: [50,100,50]\n            });\n          })\n      });;\n\n    })\n    .catch(err =>{\n      console.error(\"Ocorreu um erro:\"+ err);\n    })\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}